; ======================================================================
; ■■■ キャラクター設定 ■■■
; ======================================================================
; キャラクターの名前、性格、画像、音声などを設定します。

; --- キャラクターの基本設定 ---
[INFO]
; キャラクター名
CHARACTER_NAME = アイリス
; システムメニューなどで使われる名前
SYSTEM_NAME = テストキャラ JME-0 プロト・アイリス

; --- キャラクターの話し方 ---
; 一人称 (例: 私, 俺, 僕)
FIRST_PERSON = 私
; ユーザー(プレイヤー)の呼び方 (例: あなた, 君, 〇〇さん)
USER_REFERENCE = あなた
; 他のキャラクターや第三者を指すときの汎用的な呼び方 (例: あの人, 彼, 彼女)
THIRD_PERSON_REFERENCE = (キャラクター名)ちゃん

; --- キャラクターの性格や振る舞い ---
; キャラクターロールプレイ用の指示文
CHARACTER_PERSONALITY = （ここにキャラクターの性格や設定を記述してください）
; 自動発話の頻度（おしゃべり度）。0(寡黙)～100(おしゃべり)の範囲で設定します。
; 2人モードの場合、この数値の比率でどちらが話すかが決まります。
SPEECH_FREQUENCY = 50

; --- キャラクターの表示設定 ---
; ウィンドウの透過方式 (alpha: アルファチャンネル / color_key: 透過色指定)
TRANSPARENCY_MODE = alpha
; ウィンドウの透過色や境界線の色を個別に設定したい場合は、ここに記述します。
TRANSPARENT_COLOR = #ff00ff
EDGE_COLOR = #838383

; --- キャラクターの属性 ---
; このキャラクターが版権作品の二次創作であるか (true/false)
IS_DERIVATIVE = false
; このキャラクターがNSFW(職場での閲覧に不適切)な要素を含むか (true/false)
IS_NSFW = false


; ======================================================================
; ■■■ 音声設定 ■■■
; ======================================================================
[VOICE]
; 使用する音声エンジンを指定します (例: voicevox)
; 対応するエンジン名は src/voice_manager.py の ENGINE_MAP を参照してください。
engine = voicevox

; --- VOICEVOXを使用する場合の設定(他エンジンを使用する設定の場合はここに書いても読み込まれません) ---
[VOICE_VOX]
# ここで話者の名前とスタイルを指定します。VOICEVOXアプリの表示と完全に一致させてください。
speaker_name = WhiteCUL
speaker_style = ノーマル

; --- AivisSpeechを使用する場合の設定(他エンジンを使用する設定の場合はここに書いても読み込まれません) ---
[AIVIS_SPEECH]
# ここで話者の名前とスタイルを指定します。AivisSpeechアプリの表示と完全に一致させてください。
speaker_name = 
speaker_style = 


; ======================================================================
; ■■■ システムメッセージ設定 ■■■
; ======================================================================
; AIの応答失敗時やタイムアウト時などにキャラクターが発するセリフを個別に設定できます。
; 設定しない場合は、デフォルトのセリフが使用されます。
[SYSTEM_MESSAGES]
; Geminiが何も返事せず「虚無を返信」してきた際のエラーメッセージです。だいたいGemini側のフィルターに引っかかってます。
ON_EMPTY_RESPONSE = うーん、うまく言葉が出てきません。質問の内容がAIのルールに触れてしまったのかもしれません。表現を少し変えて、もう一度試していただけますか？
; Geminiからの返事が返って来ずタイムアウトした際のエラーメッセージです。APIキーが間違ってるか通信の問題が多いです。
ON_API_TIMEOUT = 考えるのに時間がかかりすぎているみたいです…。ネットワークやAPIキーの設定を確認してみてください。
; 試せるAPI全部に通信してもエラーが返ってきた際のエラーメッセージです。滅多にありませんが無料枠のレート範囲を超えてるとかです。
ON_ALL_MODELS_FAILED = すべてのAIモデルが今、使えないみたいです。少し待ってからもう一度試してみてください。
; 特定モデルとの通信で予期せぬエラーが発生した際のメッセージです。
;  は、エラーが発生したモデル名に自動で置き換えられます。
ON_SPECIFIC_MODEL_FAILED = モデル'{model_key}'との通信でエラーが起きました。


; ======================================================================
; ■■■ コスチュームの登録 ■■■ (「衣装ID = 衣装名」で記載してください)
; ======================================================================
[COSTUMES]
default = デフォルト


; ======================================================================
; ■■■ 各コスチュームの設定 ■■■ (「COSTUME_DETAIL_衣装ID」でセクション名を登録してください)
; ======================================================================
[COSTUME_DETAIL_default]
IMAGE_PATH = default
AVAILABLE_EMOTIONS = normal:通常,joy:喜,anger:怒,sorrow:哀,fun:楽,surprise:驚き,troubled:困り
touch_area_1 = [[430, 47, 660, 155]], 頭をなでる, hand
touch_area_2 = [[381, 523, 443, 612], [578, 423, 669, 509]], 握手, hand
touch_area_3 = [[0, 0, 258, 227]], 空白, hand


; ======================================================================
; ■■■ タッチエリア設定の詳細説明 ■■■
; ======================================================================
; キャラクターセクションまたは衣装セクション内に、以下の書式で記述します。
;
; 書式: touch_area_N = [[x1, y1, x2, y2]], アクション名, カーソル名
;
; ・ N             : 「_」に続く数字は1から始まる連番です。(例: touch_area_1, touch_area_2)
; ・ [x1, y1, x2, y2] : 元画像(例: normal_close.png)におけるタッチ判定矩形の
;                      左上(x1, y1)と右下(x2, y2)の座標を指定します。
;                      複数の矩形を同じアクションに割り当てることも可能です。
;                      (例: [[10,10,50,50], [60,60,100,100]])
; ・ アクション名  : AIに伝わるアクションの名前です。(例: 頭を撫でる)
; ・ カーソル名    : images/cursors/ フォルダ内のカーソルファイル名です(拡張子は不要)。
;                      (例: hand, poke)
; ======================================================================

; ======================================================================
; ■■■ 音声パラメータ設定 ■■■
; ======================================================================
; このキャラクターが利用する感情ごとの音声パラメータを設定します。
; キー名はAVAILABLE_EMOTIONSで定義した英語名と一致させてください。
[VOICE_PARAMS]
normal = {'speedScale': 1.0, 'pitchScale': 0.0, 'intonationScale': 1.0, 'volumeScale': 1.0}


; ===================================
; 好感度の段階設定
; ===================================
; 閾値 = "その閾値以上になった時のユーザーへの認識名" の形式で記述します。
; 閾値は大きい順でなくても構いません（プログラム側で自動的に並べ替えます）。
[FAVORABILITY_STAGES]
450 = 唯一無二の存在
300 = 親友
150 = 信頼する相手
100 = 友人
50 = 顔なじみ
5 = 知り合い
0 = 初めまして
-5 = 気まずい相手
-50 = ちょっと苦手な相手
-100 = 警戒している相手
-150 = 嫌悪している相手
-300 = 憎悪している相手
-450 = 宿敵
-500 = 不俱戴天の敵


; ---------------------------------------------------
; ハート専用のUI設定（任意）
; ---------------------------------------------------
; このセクションが存在する場合、ハート画像にここでの設定が適用されます。
; 設定がない項目は、キャラクター本体の[INFO]セクションの設定にフォールバックします。
[FAVORABILITY_HEARTS]
450 = heart_6.png
300 = heart_5.png
150 = heart_4.png
100 = heart_3.png
50 = heart_2.png
5 = heart_1.png
0 = heart_0.png
-5 = heart_-1.png
-50 = heart_-2.png
-100 = heart_-3.png
-150 = heart_-4.png
-300 = heart_-5.png
-450 = heart_-6.png
-500 = heart_-7.png

[HEART_UI]
; ウィンドウの透過方式 (alpha: アルファチャンネル / color_key: 透過色指定)
TRANSPARENCY_MODE = alpha
TRANSPARENT_COLOR = #FF00FF
EDGE_COLOR = #000000


; ======================================================================
; ■■■ 共有情報（GitHub） ■■■
; ======================================================================
[GITHUB]
; 共有先IssueのURL（または番号）。空なら新規作成されます。
ISSUE_URL = 
ISSUE_NUMBER = 


; ======================================================================
; ■■■ サムネイル設定 ■■■
; ======================================================================
; 共有時のサムネイル(thumbnail.png)に重ねて表示する黒塗り修正エリアを設定します。
[THUMBNAIL]
; censor_rects = [[x1, y1, x2, y2], [x3, y3, x4, y4]] のように矩形のリストを記述します。
censor_rects = []